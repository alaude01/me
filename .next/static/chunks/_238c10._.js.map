{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;;;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAOA,MAAM,2BAAa,8JAAM,UAAU,MAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,8KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,8KAAoB,QAAQ;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,8KAAoB,MAAM;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,8KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,0BAAY,8JAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,8KAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,8KAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,8KAAoB,mBAAmB,CAAC,WAAW"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/file-tree.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\nimport { FileIcon, FolderIcon, FolderOpenIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\ntype TreeViewElement = {\n  id: string;\n  name: string;\n  isSelectable?: boolean;\n  children?: TreeViewElement[];\n};\n\ntype TreeContextProps = {\n  selectedId: string | undefined;\n  expandedItems: string[] | undefined;\n  indicator: boolean;\n  handleExpand: (id: string) => void;\n  selectItem: (id: string) => void;\n  setExpandedItems?: React.Dispatch<React.SetStateAction<string[] | undefined>>;\n  openIcon?: React.ReactNode;\n  closeIcon?: React.ReactNode;\n  direction: \"rtl\" | \"ltr\";\n};\n\nconst TreeContext = createContext<TreeContextProps | null>(null);\n\nconst useTree = () => {\n  const context = useContext(TreeContext);\n  if (!context) {\n    throw new Error(\"useTree must be used within a TreeProvider\");\n  }\n  return context;\n};\n\ninterface TreeViewComponentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\ntype Direction = \"rtl\" | \"ltr\" | undefined;\n\ntype TreeViewProps = {\n  initialSelectedId?: string;\n  indicator?: boolean;\n  elements?: TreeViewElement[];\n  initialExpandedItems?: string[];\n  openIcon?: React.ReactNode;\n  closeIcon?: React.ReactNode;\n} & TreeViewComponentProps;\n\nconst Tree = forwardRef<HTMLDivElement, TreeViewProps>(\n  (\n    {\n      className,\n      elements,\n      initialSelectedId,\n      initialExpandedItems,\n      children,\n      indicator = true,\n      openIcon,\n      closeIcon,\n      dir,\n      ...props\n    },\n    ref,\n  ) => {\n    const [selectedId, setSelectedId] = useState<string | undefined>(\n      initialSelectedId,\n    );\n    const [expandedItems, setExpandedItems] = useState<string[] | undefined>(\n      initialExpandedItems,\n    );\n\n    const selectItem = useCallback((id: string) => {\n      setSelectedId(id);\n    }, []);\n\n    const handleExpand = useCallback((id: string) => {\n      setExpandedItems((prev) => {\n        if (prev?.includes(id)) {\n          return prev.filter((item) => item !== id);\n        }\n        return [...(prev ?? []), id];\n      });\n    }, []);\n\n    const expandSpecificTargetedElements = useCallback(\n      (elements?: TreeViewElement[], selectId?: string) => {\n        if (!elements || !selectId) return;\n        const findParent = (\n          currentElement: TreeViewElement,\n          currentPath: string[] = [],\n        ) => {\n          const isSelectable = currentElement.isSelectable ?? true;\n          const newPath = [...currentPath, currentElement.id];\n          if (currentElement.id === selectId) {\n            if (isSelectable) {\n              setExpandedItems((prev) => [...(prev ?? []), ...newPath]);\n            } else {\n              if (newPath.includes(currentElement.id)) {\n                newPath.pop();\n                setExpandedItems((prev) => [...(prev ?? []), ...newPath]);\n              }\n            }\n            return;\n          }\n          if (\n            isSelectable &&\n            currentElement.children &&\n            currentElement.children.length > 0\n          ) {\n            currentElement.children.forEach((child) => {\n              findParent(child, newPath);\n            });\n          }\n        };\n        elements.forEach((element) => {\n          findParent(element);\n        });\n      },\n      [],\n    );\n\n    useEffect(() => {\n      if (initialSelectedId) {\n        expandSpecificTargetedElements(elements, initialSelectedId);\n      }\n    }, [initialSelectedId, elements]);\n\n    const direction = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n\n    return (\n      <TreeContext.Provider\n        value={{\n          selectedId,\n          expandedItems,\n          handleExpand,\n          selectItem,\n          setExpandedItems,\n          indicator,\n          openIcon,\n          closeIcon,\n          direction,\n        }}\n      >\n        <div className={cn(\"size-full\", className)}>\n          <ScrollArea\n            ref={ref}\n            className=\"h-full relative px-2\"\n            dir={dir as Direction}\n          >\n            <AccordionPrimitive.Root\n              {...props}\n              type=\"multiple\"\n              defaultValue={expandedItems}\n              value={expandedItems}\n              className=\"flex flex-col gap-1\"\n              onValueChange={(value) =>\n                setExpandedItems((prev) => [...(prev ?? []), value[0]])\n              }\n              dir={dir as Direction}\n            >\n              {children}\n            </AccordionPrimitive.Root>\n          </ScrollArea>\n        </div>\n      </TreeContext.Provider>\n    );\n  },\n);\n\nTree.displayName = \"Tree\";\n\nconst TreeIndicator = forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { direction } = useTree();\n\n  return (\n    <div\n      dir={direction}\n      ref={ref}\n      className={cn(\n        \"h-full w-px bg-muted absolute left-1.5 rtl:right-1.5 py-3 rounded-md hover:bg-slate-300 duration-300 ease-in-out\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\n\nTreeIndicator.displayName = \"TreeIndicator\";\n\ninterface FolderComponentProps\n  extends React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item> {}\n\ntype FolderProps = {\n  expandedItems?: string[];\n  element: string;\n  isSelectable?: boolean;\n  isSelect?: boolean;\n} & FolderComponentProps;\n\nconst Folder = forwardRef<\n  HTMLDivElement,\n  FolderProps & React.HTMLAttributes<HTMLDivElement>\n>(\n  (\n    {\n      className,\n      element,\n      value,\n      isSelectable = true,\n      isSelect,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const {\n      direction,\n      handleExpand,\n      expandedItems,\n      indicator,\n      setExpandedItems,\n      openIcon,\n      closeIcon,\n    } = useTree();\n\n    return (\n      <AccordionPrimitive.Item\n        {...props}\n        value={value}\n        className=\"relative overflow-hidden h-full \"\n      >\n        <AccordionPrimitive.Trigger\n          className={cn(\n            `flex items-center gap-1 text-sm rounded-md`,\n            className,\n            {\n              \"bg-muted rounded-md\": isSelect && isSelectable,\n              \"cursor-pointer\": isSelectable,\n              \"cursor-not-allowed opacity-50\": !isSelectable,\n            },\n          )}\n          disabled={!isSelectable}\n          onClick={() => handleExpand(value)}\n        >\n          {expandedItems?.includes(value)\n            ? (openIcon ?? <FolderOpenIcon className=\"size-4\" />)\n            : (closeIcon ?? <FolderIcon className=\"size-4\" />)}\n          <span>{element}</span>\n        </AccordionPrimitive.Trigger>\n        <AccordionPrimitive.Content className=\"text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down relative overflow-hidden h-full\">\n          {element && indicator && <TreeIndicator aria-hidden=\"true\" />}\n          <AccordionPrimitive.Root\n            dir={direction}\n            type=\"multiple\"\n            className=\"flex flex-col gap-1 py-1 ml-5 rtl:mr-5 \"\n            defaultValue={expandedItems}\n            value={expandedItems}\n            onValueChange={(value) => {\n              setExpandedItems?.((prev) => [...(prev ?? []), value[0]]);\n            }}\n          >\n            {children}\n          </AccordionPrimitive.Root>\n        </AccordionPrimitive.Content>\n      </AccordionPrimitive.Item>\n    );\n  },\n);\n\nFolder.displayName = \"Folder\";\n\nconst File = forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    handleSelect?: (id: string) => void;\n    isSelectable?: boolean;\n    isSelect?: boolean;\n    fileIcon?: React.ReactNode;\n  } & React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(\n  (\n    {\n      value,\n      className,\n      handleSelect,\n      isSelectable = true,\n      isSelect,\n      fileIcon,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const { direction, selectedId, selectItem } = useTree();\n    const isSelected = isSelect ?? selectedId === value;\n    return (\n      <AccordionPrimitive.Item value={value} className=\"relative\">\n        <AccordionPrimitive.Trigger\n          ref={ref}\n          {...props}\n          dir={direction}\n          disabled={!isSelectable}\n          aria-label=\"File\"\n          className={cn(\n            \"flex items-center gap-1 cursor-pointer text-sm pr-1 rtl:pl-1 rtl:pr-0 rounded-md  duration-200 ease-in-out\",\n            {\n              \"bg-muted\": isSelected && isSelectable,\n            },\n            isSelectable ? \"cursor-pointer\" : \"opacity-50 cursor-not-allowed\",\n            className,\n          )}\n          onClick={() => selectItem(value)}\n        >\n          {fileIcon ?? <FileIcon className=\"size-4\" />}\n          {children}\n        </AccordionPrimitive.Trigger>\n      </AccordionPrimitive.Item>\n    );\n  },\n);\n\nFile.displayName = \"File\";\n\nconst CollapseButton = forwardRef<\n  HTMLButtonElement,\n  {\n    elements: TreeViewElement[];\n    expandAll?: boolean;\n  } & React.HTMLAttributes<HTMLButtonElement>\n>(({ className, elements, expandAll = false, children, ...props }, ref) => {\n  const { expandedItems, setExpandedItems } = useTree();\n\n  const expendAllTree = useCallback((elements: TreeViewElement[]) => {\n    const expandTree = (element: TreeViewElement) => {\n      const isSelectable = element.isSelectable ?? true;\n      if (isSelectable && element.children && element.children.length > 0) {\n        setExpandedItems?.((prev) => [...(prev ?? []), element.id]);\n        element.children.forEach(expandTree);\n      }\n    };\n\n    elements.forEach(expandTree);\n  }, []);\n\n  const closeAll = useCallback(() => {\n    setExpandedItems?.([]);\n  }, []);\n\n  useEffect(() => {\n    console.log(expandAll);\n    if (expandAll) {\n      expendAllTree(elements);\n    }\n  }, [expandAll]);\n\n  return (\n    <Button\n      variant={\"ghost\"}\n      className=\"h-8 w-fit p-1 absolute bottom-1 right-2\"\n      onClick={\n        expandedItems && expandedItems.length > 0\n          ? closeAll\n          : () => expendAllTree(elements)\n      }\n      ref={ref}\n      {...props}\n    >\n      {children}\n      <span className=\"sr-only\">Toggle</span>\n    </Button>\n  );\n});\n\nCollapseButton.displayName = \"CollapseButton\";\n\nexport { CollapseButton, File, Folder, Tree, type TreeViewElement };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/authentication/Boxcode.tsx"],"sourcesContent":["\"use client\";\nimport { useTheme } from \"next-themes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport theme_light from \"react-syntax-highlighter/dist/esm/styles/prism/one-light\";\nimport theme_dark from \"react-syntax-highlighter/dist/esm/styles/prism/one-dark\";\n\ninterface CodeBlockProps {\n  code: string;\n  language: string;\n}\n\nconst CodeBlock = ({ code, language }: CodeBlockProps) => {\n  const customStyle = {\n    borderRadius: \"0.75rem\",\n  };\n  const { theme } = useTheme();\n  return (\n    <SyntaxHighlighter\n      language={language}\n      style={theme === \"light\" ? theme_light : theme_dark}\n      customStyle={customStyle}\n      showLineNumbers\n    >\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeBlock;\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAWA,MAAM,YAAY,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAkB;;IACnD,MAAM,cAAc;QAClB,cAAc;IAChB;IACA,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,WAAQ,AAAD;IACzB,qBACE,6LAAC,6MAAA,CAAA,QAAiB;QAChB,UAAU;QACV,OAAO,UAAU,UAAU,mMAAA,CAAA,UAAW,GAAG,kMAAA,CAAA,UAAU;QACnD,aAAa;QACb,eAAe;kBAEd;;;;;;AAGP;GAfM;;QAIc,4JAAA,CAAA,WAAQ;;;KAJtB;uCAiBS"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/authentication/data.ts"],"sourcesContent":["const details = {\n  title:\n    \"การ Authentication (ออเทนทิเคชั่น) หรือการยืนยันตัวตน คือ กระบวนการตรวจสอบและยืนยันว่า ผู้ใช้หรือระบบที่กำลังพยายามเข้าถึงข้อมูลหรือบริการต่าง ๆ เป็นใคร โดยใช้ข้อมูลที่ใช้ยืนยัน เช่น ชื่อผู้ใช้และรหัสผ่าน, การส่งรหัส OTP ทางข้อความ, หรือการสแกนลายนิ้วมือ การทำเช่นนี้มีจุดประสงค์เพื่อให้แน่ใจว่าผู้ใช้มีสิทธิ์ในการเข้าถึงข้อมูลหรือบริการนั้น ๆ โดยป้องกันไม่ให้บุคคลที่ไม่มีสิทธิ์เข้ามาใช้งาน\",\n};\n\nconst code = {\n  main: `package main\n\nimport (\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/gofiber/fiber/v2/middleware/cors\"\n\t\"github.com/gofiber/fiber/v2/middleware/logger\"\n\t\"github.com/joho/godotenv\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/db\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/middleware\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/routing/auth\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/routing/emp\"\n\t\"os\"\n\t\"time\"\n)\n\nfunc main() {\n\terr := godotenv.Load()\n\tif err != nil {\n\t\tpanic(\"Error loading .env file\")\n\t}\n\tapi := os.Getenv(\"API_VERSION\")\n\tdbuser := os.Getenv(\"DB_USER\")\n\tdbpass := os.Getenv(\"DB_PASS\")\n\tdbhost := os.Getenv(\"DB_HOST\")\n\tdbname := os.Getenv(\"DB_NAME\")\n\n\tdb, err := db.New(dbuser, dbpass, dbhost, dbname)\n\tif err != nil {\n\t\tpanic(\"failed to connect to database\")\n\t}\n\tapp := fiber.New()\n\tapp.Use(cors.New(cors.Config{\n\t\tAllowOrigins:     \"http://localhost:5173\",                       \n\t\tAllowMethods:     \"GET, POST, PUT, DELETE, OPTIONS\",             \n\t\tAllowHeaders:     \"Origin, Content-Type, Accept, Authorization\", \n\t\tAllowCredentials: true,                                          \n\t\tMaxAge:           int(24 * time.Hour / time.Second),             \n\t}))\n\n\tapp.Use(logger.New())\n\t//localhost/v1/auth\n\tauth_v1 := app.Group(api + \"/auth\")\n\tauth.SetAuthentication(auth_v1, db.DB)\n\temp_v1 := app.Group(api+\"/employees\", middleware.Token)\n\temp.EmployeesRouting(emp_v1, db.DB)\n\tapp.Listen(\":3000\")\n}\n  `,\n  db: `package db\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/models\"\n\t\"gorm.io/driver/mysql\"\n\t\"gorm.io/gorm\"\n\t\"gorm.io/gorm/logger\"\n\t\"log\"\n)\n\ntype Db struct {\n\tDB *gorm.DB\n}\n\nfunc New(dbuser string, dbpass string, dbhost string, dbname string) (*Db, error) {\n\tdsn := fmt.Sprintf(\"%s:%s@tcp(%s)/%s?charset=utf8mb4&parseTime=True&loc=Local\",\n\t\tdbuser, dbpass, dbhost, dbname)\n\tdb, err := gorm.Open(mysql.Open(dsn), &gorm.Config{Logger: loggerConfig(true)})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\terr = db.AutoMigrate(\n\t\t&models.Region{},\n\t\t&models.Country{},\n\t\t&models.Location{},\n\t\t&models.Job{},\n\t\t&models.Department{},\n\t\t&models.Employee{},\n\t\t&models.Dependent{},\n\t\t&models.AuthUser{},\n\t\t&models.Token{},\n\t\t&models.Image{},\n\t)\n\n\tif err != nil {\n\t\tlog.Fatalf(\"ไม่สามารถ migrate ตารางได้: %v\", err)\n\t}\n\treturn &Db{DB: db}, nil\n}\n\nfunc loggerConfig(enable bool) logger.Interface {\n\tif enable {\n\t\tnewLogger := logger.New(\n\t\t\tlog.New(os.Stdout, \"\\r\\n\", log.LstdFlags), // io writer\n\t\t\tlogger.Config{\n\t\t\t\tSlowThreshold:             time.Second, // Slow SQL threshold\n\t\t\t\tLogLevel:                  logger.Info, // Set log level\n\t\t\t\tIgnoreRecordNotFoundError: true,        // Ignore ErrRecordNotFound errors\n\t\t\t\tParameterizedQueries:      true,        // Don't include raw SQL queries in logs\n\t\t\t\tColorful:                  true,        // Colorize logs\n\t\t\t},\n\t\t)\n\t\treturn newLogger\n\t}\n\n\t// Default silent logger if not enabled\n\treturn logger.Default.LogMode(logger.Silent)\n}\n`,\n  md: `package middleware\nimport(\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/utils\"\n\n)\n\nfunc Token(c *fiber.Ctx) error {\n\t_, err := utils.VerifyToken(c.Cookies(\"emp_auth\"));\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusUnauthorized).SendString(\"Unauthorized\");\n\t}\n\treturn c.Next();\n}\n`,\n  models: `package models\n\nimport \"time\"\n\ntype Region struct {\n\tID         int       \\`gorm:\"column:region_id;primaryKey;autoIncrement\" json:\"region_id\"\\`\n\tRegionName string    \\`gorm:\"column:region_name\" json:\"region_name\"\\`\n\tCountries  []Country \\`gorm:\"foreignKey:RegionID\" json:\"countries\"\\`\n}\n\ntype Country struct {\n\tID          string     \\`gorm:\"column:country_id;primaryKey;size:2\" json:\"country_id\"\\`\n\tCountryName string     \\`gorm:\"column:country_name\" json:\"country_name\"\\`\n\tRegionID    int        \\`gorm:\"column:region_id\" json:\"region_id\"\\`\n\tRegion      Region     \\`gorm:\"foreignKey:RegionID\" json:\"region\"\\`\n\tLocations   []Location \\`gorm:\"foreignKey:CountryID\" json:\"locations\"\\`\n}\n\ntype Location struct {\n\tID            int          \\`gorm:\"column:location_id;primaryKey;autoIncrement\" json:\"location_id\"\\`\n\tStreetAddress string       \\`gorm:\"column:street_address\" json:\"street_address\"\\`\n\tPostalCode    string       \\`gorm:\"column:postal_code\" json:\"postal_code\"\\`\n\tCity          string       \\`gorm:\"column:city;not null\" json:\"city\"\\`\n\tStateProvince string       \\`gorm:\"column:state_province\" json:\"state_province\"\\`\n\tCountryID     string       \\`gorm:\"column:country_id;size:2;not null\" json:\"country_id\"\\`\n\tCountry       Country      \\`gorm:\"foreignKey:CountryID\" json:\"country\"\\`\n\tDepartments   []Department \\`gorm:\"foreignKey:LocationID\" json:\"departments\"\\`\n}\n\ntype Job struct {\n\tID        int        \\`gorm:\"column:job_id;primaryKey;autoIncrement\" json:\"job_id\"\\`\n\tJobTitle  string     \\`gorm:\"column:job_title;not null\" json:\"job_title\"\\`\n\tMinSalary float64    \\`gorm:\"column:min_salary\" json:\"min_salary\"\\`\n\tMaxSalary float64    \\`gorm:\"column:max_salary\" json:\"max_salary\"\\`\n\tEmployees []Employee \\`gorm:\"foreignKey:JobID\" json:\"employees\"\\`\n}\n\ntype Department struct {\n\tID             int        \\`gorm:\"column:department_id;primaryKey;autoIncrement\" json:\"department_id\"\\`\n\tDepartmentName string     \\`gorm:\"column:department_name;not null\" json:\"department_name\"\\`\n\tLocationID     int        \\`gorm:\"column:location_id\" json:\"location_id\"\\`\n\tLocation       Location   \\`gorm:\"foreignKey:LocationID\" json:\"location\"\\`\n\tEmployees      []Employee \\`gorm:\"foreignKey:DepartmentID\" json:\"employees\"\\`\n}\n\ntype Employee struct {\n\tID           int         \\`gorm:\"column:employee_id;primaryKey;autoIncrement\" json:\"employee_id\"\\`\n\tFirstName    string      \\`gorm:\"column:first_name\" json:\"first_name\"\\`\n\tLastName     string      \\`gorm:\"column:last_name;not null\" json:\"last_name\"\\`\n\tEmail        string      \\`gorm:\"column:email;not null\" json:\"email\"\\`\n\tPhoneNumber  string      \\`gorm:\"column:phone_number\" json:\"phone_number\"\\`\n\tHireDate     time.Time   \\`gorm:\"column:hire_date;not null\" json:\"hire_date\"\\`\n\tJobID        int         \\`gorm:\"column:job_id;not null\" json:\"job_id\"\\`\n\tJob          Job         \\`gorm:\"foreignKey:JobID\" json:\"job\"\\`\n\tSalary       float64     \\`gorm:\"column:salary;not null\" json:\"salary\"\\`\n\tManagerID    *int        \\`gorm:\"column:manager_id\" json:\"manager_id\"\\`\n\tManager      *Employee   \\`gorm:\"foreignKey:ManagerID\" json:\"manager\"\\`\n\tDepartmentID *int        \\`gorm:\"column:department_id\" json:\"department_id\"\\`\n\tDepartment   *Department \\`gorm:\"foreignKey:DepartmentID\" json:\"department\"\\`\n\tSubordinates []Employee  \\`gorm:\"foreignKey:ManagerID\" json:\"subordinates\"\\`\n\tDependents   []Dependent \\`gorm:\"foreignKey:EmployeeID\" json:\"dependents\"\\`\n}\n\ntype Dependent struct {\n\tID           int      \\`gorm:\"column:dependent_id;primaryKey;autoIncrement\" json:\"dependent_id\"\\`\n\tFirstName    string   \\`gorm:\"column:first_name;not null\" json:\"first_name\"\\`\n\tLastName     string   \\`gorm:\"column:last_name;not null\" json:\"last_name\"\\`\n\tRelationship string   \\`gorm:\"column:relationship;not null\" json:\"relationship\"\\`\n\tEmployeeID   int      \\`gorm:\"column:employee_id;not null\" json:\"employee_id\"\\`\n\tEmployee     Employee \\`gorm:\"foreignKey:EmployeeID\" json:\"employee\"\\`\n}\n\n// AuthUser model for authentication\ntype AuthUser struct {\n\tEmployeeID       int        \\`gorm:\"primaryKey;\" json:\"employee_id\"\\`\n\tEmail            string     \\`gorm:\"type:varchar(100);unique;not null\"\\`\n\tPassword         string     \\`gorm:\"type:varchar(255);not null\"\\` // Password should be hashed\n\tLastLogin        *time.Time // Track the last login time\n\tRole             string     \\`gorm:\"type:varchar(20);default:admin\"\\` // Default role is admin\n\tResetToken       string     \\`gorm:\"type:varchar(255)\"\\`              // For password reset functionality\n\tResetTokenExpiry *time.Time // For tracking token expiration\n\tEmployee         Employee   \\`gorm:\"foreignKey:EmployeeID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE\" json:\"employee\"\\`\n}\n\n// Token model for managing JWT tokens\ntype Token struct {\n\tUserID    int       \\`gorm:\"not null\"\\`\n\tToken     string    \\`gorm:\"type:text;not null\"\\`\n\tExpiresAt time.Time \\`gorm:\"not null\"\\`\n\tUser      AuthUser  \\`gorm:\"foreignKey:UserID;constraint:OnUpdate:CASCADE,OnDelete:CASCADE\"\\`\n}\n\ntype Image struct {\n\tID         int      \\`gorm:\"column:id;primaryKey;autoIncrement\" json:\"id\"\\`\n\tEmployeeID int      \\`gorm:\"column:employee_id;not null\" json:\"employee_id\"\\`\n\tFileName   string   \\`gorm:\"column:file_name;size:100\" json:\"file_name\"\\`\n\tFileType   string   \\`gorm:\"column:file_type;size:100\" json:\"file_type\"\\`\n\tFileData   []byte   \\`gorm:\"column:file_data;type:LONGBLOB\" json:\"file_data\"\\`\n\tEmployee   Employee \\`gorm:\"foreignKey:EmployeeID;constraint:OnUpdate:CASCADE,OnDelete:Cascade\" json:\"employee\"\\`\n}\n`,\n  auth: `package auth\n\nimport (\n\t\"errors\"\n\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/models\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/utils\"\n\t\"gorm.io/gorm\"\n\t\"time\"\n)\n\nfunc SetAuthentication(app fiber.Router, db *gorm.DB) {\n\tapp.Get(\"/\", func(c *fiber.Ctx) error {\n\t\treturn auth(c, db)\n\t})\n\tapp.Post(\"/register\", func(c *fiber.Ctx) error {\n\t\treturn register(c, db)\n\t})\n\tapp.Post(\"/login\", func(c *fiber.Ctx) error {\n\t\treturn login(c, db)\n\t})\n}\n\ntype Employees struct {\n\tID       uint   \\`json:\"id\"\\`\n\tEmail    string \\`json:\"email\"\\`\n\tPassword string \\`json:\"pass\"\\`\n\tRole     string \\`json:\"role\"\\`\n}\n\nfunc auth(c *fiber.Ctx, db *gorm.DB) error {\n\tvar user struct {\n\t\tID         uint    \\`json:\"id\"\\`\n\t\tName       string  \\`json:\"firstname\"\\`\n\t\tLastname   string  \\`json:\"lastname\"\\`\n\t\tEmail      string  \\`json:\"email\"\\`\n\t\tPhone      string  \\`json:\"phone\"\\`\n\t\tDepartment string  \\`json:\"departmentname\"\\`\n\t\tJobTitle   string  \\`json:\"positions\"\\`\n\t\tSalary     float64 \\`json:\"salary\"\\`\n\t}\n\ttoken := c.Cookies(\"emp_auth\")\n\tif token == \"\" {\n\t\treturn c.Status(fiber.StatusUnauthorized).SendString(\"Unauthorized\")\n\t}\n\tdeta, err := utils.VerifyToken(c.Cookies(\"emp_auth\"))\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusUnauthorized).SendString(\"Unauthorized\")\n\t}\n\tid, ok := deta[\"id\"]\n\tif !ok {\n\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"Failed to retrieve id\")\n\t}\n\n\tquery := \\`\n\tSELECT\n\t    e.employee_id AS id,\n\t    e.first_name AS name,\n\t    e.last_name AS lastname,\n\t    e.email,\n\t    e.phone_number AS phone,\n\t    d.department_name AS department,\n\t    j.job_title AS job_title,\n\t    e.salary\n\tFROM\n\t    employees e\n\tLEFT JOIN\n\t    departments d ON e.department_id = d.department_id\n\tLEFT JOIN\n\t    jobs j ON e.job_id = j.job_id\n\tWHERE e.employee_id = ?;\\`\n\n\tif err := db.Raw(query, id).Scan(&user).Error; err != nil {\n\t\treturn c.Status(500).JSON(fiber.Map{\"error\": \"Could not fetch employee\"})\n\t}\n\n\tif user.ID == 0 {\n\t\treturn c.Status(404).JSON(fiber.Map{\"error\": \"Employee not found\"})\n\t}\n\n\treturn c.Status(200).JSON(user)\n}\n\nfunc register(c *fiber.Ctx, db *gorm.DB) error {\n\te := new(Employees)\n\tif err := c.BodyParser(e); err != nil {\n\t\treturn c.Status(fiber.StatusBadRequest).SendString(err.Error())\n\t}\n\n\thash, _ := utils.HashPassword(e.Password)\n\tdata := models.AuthUser{\n\t\tEmployeeID: int(e.ID),\n\t\tEmail:      e.Email,\n\t\tPassword:   hash,\n\t\tRole:       e.Role,\n\t}\n\tresult := db.Create(&data)\n\tif result.Error != nil {\n\t\treturn c.Status(fiber.StatusConflict).SendString(\"create user unsuccessful: \" + result.Error.Error())\n\t}\n\n\treturn c.Status(fiber.StatusCreated).SendString(\"create user successful!\")\n}\n\nfunc login(c *fiber.Ctx, db *gorm.DB) error {\n\te := new(Employees)\n\tif err := c.BodyParser(e); err != nil {\n\t\treturn c.Status(fiber.StatusBadRequest).SendString(err.Error())\n\t}\n\tvar user models.AuthUser\n\t//   SELECT id, email, password, role FROM mydb.auth_users WHERE email = ?\n\tif err := db.Select(\"employee_id, email, password, role\").Where(\"email = ?\", e.Email).First(&user).Error; err != nil {\n\t\tif errors.Is(err, gorm.ErrRecordNotFound) {\n\t\t\treturn c.Status(fiber.StatusNotFound).SendString(\"user not found\")\n\t\t}\n\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"error retrieving user\")\n\t}\n\n\tif !utils.CheckPasswordHash(e.Password, user.Password) {\n\t\treturn c.Status(fiber.StatusUnauthorized).SendString(\"invalid password\")\n\t}\n\n\t//set Tonken\n\ttoken, err := utils.CreateToken(uint(user.EmployeeID), user.Email, user.Role)\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusConflict).SendString(\"create user unsuccessful: \" + err.Error())\n\t}\n\tnow := time.Now()\n\tuser.LastLogin = &now\n\t//UPDATE auth_users SET last_login = <time.Now> WHERE id = <user.ID>;\n\tif err := db.Model(&user).Update(\"last_login\", user.LastLogin).Error; err != nil {\n\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"error updating last login time: \" + err.Error())\n\t}\n\n\tvar existingToken models.Token\n\terr = db.Where(\"user_id = ?\", user.EmployeeID).First(&existingToken).Error\n\tif err != nil && !errors.Is(err, gorm.ErrRecordNotFound) {\n\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"error checking for existing token: \" + err.Error())\n\t}\n\n\tif errors.Is(err, gorm.ErrRecordNotFound) {\n\t\t//INSERT INTO mydb.tokens (user_id, token, expires_at) VALUES(?, ?, ?);\n\t\ttokenModel := models.Token{\n\t\t\tUserID:    user.EmployeeID,\n\t\t\tToken:     token,\n\t\t\tExpiresAt: time.Now().Add(24 * time.Hour),\n\t\t}\n\t\tif err := db.Create(&tokenModel).Error; err != nil {\n\t\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"error creating token: \" + err.Error())\n\t\t}\n\t} else {\n\t\t// UPDATE tokens SET token = <newTokenValue>, expires_at = <newExpiryTime>, updated_at = <currentTime> WHERE id = existingTokenID;\n\t\tif err := db.Model(&existingToken).\n\t\t\tWhere(\"user_id = ?\", user.EmployeeID).\n\t\t\tUpdates(models.Token{Token: token, ExpiresAt: time.Now().Add(24 * time.Hour)}).Error; err != nil {\n\t\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"error updating token: \" + err.Error())\n\t\t}\n\t}\n\t// set database : CREATE EVENT delete_expired_tokens ON SCHEDULE EVERY 1 HOUR DO DELETE FROM tokens WHERE expires_at < NOW();\n\n\tc.Cookie(&fiber.Cookie{\n\t\tName:     \"emp_auth\",\n\t\tValue:    token,\n\t\tExpires:  time.Now().Add(time.Hour * 24),\n\t\tHTTPOnly: true,\n\t\tSecure:   true,\n\t\tSameSite: \"Strict\",\n\t})\n\n\treturn c.Status(fiber.StatusOK).SendString(\"login successful!\")\n}\n`,\n  emp: `package emp\n\nimport (\n\t\"github.com/gofiber/fiber/v2\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/models\"\n\t\"github.com/phonsing-Hub/EmployeeSystem/src/utils\"\n\t\"gorm.io/gorm\"\n\t\"io\"\n\t//\"time\"\n)\n\nfunc EmployeesRouting(app fiber.Router, db *gorm.DB) {\n\tapp.Get(\"/\", func(c *fiber.Ctx) error {\n\t\treturn getAllEmployeeDetails(c, db)\n\t})\n\tapp.Get(\"/:id\", func(c *fiber.Ctx) error {\n\t\treturn getAllEmployeeById(c, db)\n\t})\n\tapp.Post(\"/new\", func(c *fiber.Ctx) error {\n\t\treturn upLoadImage(c, db)\n\t})\n\n\tapp.Get(\"image/:id\", func(c *fiber.Ctx) error {\n\t\treturn getImage(c, db)\n\t})\n\n}\n\nfunc getAllEmployeeDetails(c *fiber.Ctx, db *gorm.DB) error {\n\tvar employeeDetails []struct {\n\t\tID         uint    \\`json:\"id\"\\`\n\t\tName       string  \\`json:\"firstname\"\\`\n\t\tLastname   string  \\`json:\"lastname\"\\`\n\t\tEmail      string  \\`json:\"email\"\\`\n\t\tPhone      string  \\`json:\"phone\"\\`\n\t\tDepartment string  \\`json:\"department\"\\`\n\t\tJobTitle   string  \\`json:\"positions\"\\`\n\t\tHiredate   string  \\`json:\"hiredate\"\\`\n\t\tSalary     float64 \\`json:\"salary\"\\`\n\t}\n\n\tquery := \\`\n\tSELECT\n\t    e.employee_id AS id,\n\t    e.first_name AS name,\n\t    e.last_name AS lastname,\n\t    e.email,\n\t    e.phone_number AS phone,\n\t    d.department_name AS department,\n\t    j.job_title AS job_title,\n\t\te.hire_date AS hiredate,\n\t    e.salary\n\tFROM\n\t    employees e\n\tLEFT JOIN\n\t    departments d ON e.department_id = d.department_id\n\tLEFT JOIN\n\t    jobs j ON e.job_id = j.job_id;\\`\n\n\tif err := db.Raw(query).Scan(&employeeDetails).Error; err != nil {\n\t\treturn c.Status(500).JSON(fiber.Map{\"error\": \"Could not fetch employee details\"})\n\t}\n\n\treturn c.Status(200).JSON(employeeDetails)\n}\n\nfunc getAllEmployeeById(c *fiber.Ctx, db *gorm.DB) error {\n\tid := c.Params(\"id\")\n\tvar employeeById struct {\n\t\tID         uint    \\`json:\"id\"\\`\n\t\tName       string  \\`json:\"firstname\"\\`\n\t\tLastname   string  \\`json:\"lastname\"\\`\n\t\tEmail      string  \\`json:\"email\"\\`\n\t\tPhone      string  \\`json:\"phone\"\\`\n\t\tDepartment string  \\`json:\"departmentname\"\\`\n\t\tJobTitle   string  \\`json:\"positions\"\\`\n\t\tSalary     float64 \\`json:\"salary\"\\`\n\t}\n\n\tquery := \\`\n\tSELECT\n\t    e.employee_id AS id,\n\t    e.first_name AS name,\n\t    e.last_name AS lastname,\n\t    e.email,\n\t    e.phone_number AS phone,\n\t    d.department_name AS department,\n\t    j.job_title AS job_title,\n\t    e.salary\n\tFROM\n\t    employees e\n\tLEFT JOIN\n\t    departments d ON e.department_id = d.department_id\n\tLEFT JOIN\n\t    jobs j ON e.job_id = j.job_id\n\t\tWHERE e.employee_id = ?;\\`\n\n\tif err := db.Raw(query, id).Scan(&employeeById).Error; err != nil {\n\t\treturn c.Status(500).JSON(fiber.Map{\"error\": \"Could not fetch employee\"})\n\t}\n\n\tif employeeById.ID == 0 {\n\t\treturn c.Status(404).JSON(fiber.Map{\"error\": \"Employee not found\"})\n\t}\n\n\treturn c.Status(200).JSON(employeeById)\n}\n\nfunc upLoadImage(c *fiber.Ctx, db *gorm.DB) error {\n\t// รับไฟล์จาก request\n\tresult, _ := utils.VerifyToken(c.Cookies(\"emp_auth\"))\n\tid, ok := result[\"id\"].(float64)\n\tif !ok {\n\t\treturn c.Status(fiber.StatusInternalServerError).SendString(\"Failed to retrieve id\")\n\t}\n\n\tfile, err := c.FormFile(\"image\")\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusBadRequest).JSON(fiber.Map{\n\t\t\t\"error\": \"Cannot get image file\",\n\t\t})\n\t}\n\n\t// เปิดไฟล์เพื่ออ่านข้อมูล\n\tfileHeader, err := file.Open()\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{\n\t\t\t\"error\": \"Cannot open image file\",\n\t\t})\n\t}\n\tdefer fileHeader.Close()\n\n\t// อ่านข้อมูลไฟล์ทั้งหมด\n\tfileData, err := io.ReadAll(fileHeader)\n\tif err != nil {\n\t\treturn c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{\n\t\t\t\"error\": \"Cannot read image file\",\n\t\t})\n\t}\n\n\t// สร้าง record ในฐานข้อมูล\n\timage := models.Image{\n\t\tEmployeeID: int(id),\n\t\tFileName:   file.Filename,\n\t\tFileType:   file.Header.Get(\"Content-Type\"),\n\t\tFileData:   fileData,\n\t}\n\n\t// บันทึกข้อมูลลงในฐานข้อมูล\n\tif err := db.Create(&image).Error; err != nil {\n\t\treturn c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{\n\t\t\t\"error\": \"Cannot save image information\",\n\t\t})\n\t}\n\n\t// ส่ง response กลับไป\n\treturn c.JSON(fiber.Map{\n\t\t\"message\":   \"Image uploaded successfully\",\n\t\t\"image_id\":  image.ID,\n\t\t\"file_name\": image.FileName,\n\t})\n\n}\n\nfunc getImage(c *fiber.Ctx, db *gorm.DB) error {\n\t// รับ id ของภาพจาก URL parameter\n\timageID := c.Params(\"id\")\n\n\t// สร้างโครงสร้างของ Image สำหรับการค้นหาจากฐานข้อมูล\n\tvar image models.Image\n\tif err := db.First(&image, \"employee_id = ?\", imageID).Error; err != nil {\n\t\treturn c.Status(fiber.StatusNotFound).JSON(fiber.Map{\n\t\t\t\"error\": \"Image not found\",\n\t\t})\n\t}\n\n\t// ตั้งค่า Content-Type ให้ตรงกับประเภทของไฟล์\n\tc.Set(\"Content-Type\", image.FileType)\n\n\t// ส่งข้อมูลไฟล์กลับไป\n\treturn c.Send(image.FileData)\n}\n\n`,\n  bcrypt: `package utils\n\nimport(\n\t\"golang.org/x/crypto/bcrypt\"\n)\n\nfunc HashPassword(password string) (string, error) {\n    bytes, err := bcrypt.GenerateFromPassword([]byte(password), 10)\n    return string(bytes), err\n}\n\nfunc CheckPasswordHash(password, hash string) bool {\n    err := bcrypt.CompareHashAndPassword([]byte(hash), []byte(password))\n    return err == nil\n}\n\n`,\n  jwt: `package utils\n\nimport (\n\t\"crypto/rsa\"\n\t\"errors\"\n\t\"github.com/golang-jwt/jwt/v5\"\n\t\"os\"\n\t\"time\"\n)\n// sh\n// # create Private Key\n// openssl genpkey -algorithm RSA -out private.key-pkeyopt rsa_keygen_bits:2048\n\n// # create Public Key จาก Private Key\n// openssl rsa -pubout -in private.key -out public.key\n\nvar (\n\tprivateKey *rsa.PrivateKey\n\tpublicKey  *rsa.PublicKey\n)\n\n// Initialize keys\nfunc init() {\n\t// Load Private Key\n\tprivateKeyData, err := os.ReadFile(\"src/utils/private.key\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tprivateKey, err = jwt.ParseRSAPrivateKeyFromPEM(privateKeyData)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Load Public Key\n\tpublicKeyData, err := os.ReadFile(\"src/utils/public.key\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tpublicKey, err = jwt.ParseRSAPublicKeyFromPEM(publicKeyData)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// CreateToken generates a new JWT token with the provided user ID, email, and role\nfunc CreateToken(id uint, email string, role string) (string, error) {\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodRS256,\n\t\tjwt.MapClaims{\n\t\t\t\"id\":    id,\n\t\t\t\"email\": email,\n\t\t\t\"role\":  role,\n\t\t\t\"exp\":   time.Now().Add(time.Hour * 24).Unix(), // Token expires in 24 hours\n\t\t})\n\n\ttokenString, err := token.SignedString(privateKey)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn tokenString, nil\n}\n\n// VerifyToken parses and validates the provided JWT token string\nfunc VerifyToken(tokenString string) (jwt.MapClaims, error) {\n\ttoken, err := jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) {\n\t\t// Ensure the token's signing method is RSA and the same as expected\n\t\tif _, ok := token.Method.(*jwt.SigningMethodRSA); !ok {\n\t\t\treturn nil, errors.New(\"unexpected signing method\")\n\t\t}\n\t\treturn publicKey, nil\n\t})\n\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Check if the token is valid and contains claims\n\tif claims, ok := token.Claims.(jwt.MapClaims); ok && token.Valid {\n\t\treturn claims, nil\n\t}\n\n\treturn nil, errors.New(\"invalid token\")\n}\n`,\n};\n\nexport { details, code };\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU;IACd,OACE;AACJ;AAEA,MAAM,OAAO;IACX,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+CP,CAAC;IACD,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DP,CAAC;IACC,IAAI,CAAC;;;;;;;;;;;;;;AAcP,CAAC;IACC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGX,CAAC;IACC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KT,CAAC;IACC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLR,CAAC;IACC,QAAQ,CAAC;;;;;;;;;;;;;;;;AAgBX,CAAC;IACC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFR,CAAC;AACD"}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/authentication/display.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { ScrollShadow } from \"@nextui-org/scroll-shadow\";\nimport { File, Folder, Tree } from \"@/components/ui/file-tree\";\nimport CodeBlock from \"./Boxcode\";\nimport { code } from \"./data\";\n\nfunction Display() {\n  const [selectedFile, setSelectedFile] = useState(\"main.go\");\n  const [syntaxcode, setSyntaxCode] = useState(code.main);\n  const activeClass =\n    \"bg-gradient-to-r from-purple-500/80 to-pink-500/80 rounded-md px-1 \";\n  const handleSelectFile = (file: string) => {\n    setSelectedFile(file);\n    switch (file) {\n      case \"main.go\":\n        setSyntaxCode(code.main);\n        break;\n      case \"db.go\":\n        setSyntaxCode(code.db);\n        break;\n      case \"middleware.go\":\n        setSyntaxCode(code.md);\n        break;\n      case \"models.go\":\n        setSyntaxCode(code.models);\n        break;\n      case \"auth.go\":\n        setSyntaxCode(code.auth);\n        break;\n      case \"emp.go\":\n        setSyntaxCode(code.emp);\n        break;\n      case \"bcrypt.go\":\n        setSyntaxCode(code.bcrypt);\n        break;\n      case \"jwt.go\":\n        setSyntaxCode(code.jwt);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <main className=\" flex mt-4 relative rounded-md border p-1 overflow-hidden\">\n      <div className=\"relative flex w-1/5 min-w-44 flex-col items-center justify-center overflow-hidden bg-background\">\n        <Tree\n          className=\"p-2 overflow-hidden rounded-md bg-background\"\n          initialSelectedId=\"main\"\n          initialExpandedItems={[\"src\"]}\n          elements={ELEMENTS}\n        >\n          <Folder element=\"src\" value=\"src\">\n            <Folder value=\"db\" element=\"db\">\n              <File value=\"db.go\">\n                <p\n                  className={selectedFile === \"db.go\" ? activeClass : \"\"}\n                  onClick={() => handleSelectFile(\"db.go\")}\n                >\n                  db.go\n                </p>\n              </File>\n            </Folder>\n            <Folder value=\"middleware\" element=\"middleware\">\n              <File value=\"middleware.go\">\n                <p\n                  className={\n                    selectedFile === \"middleware.go\" ? activeClass : \"\"\n                  }\n                  onClick={() => handleSelectFile(\"middleware.go\")}\n                >\n                  middleware.go\n                </p>\n              </File>\n            </Folder>\n            <Folder value=\"models\" element=\"models\">\n              <File value=\"models.go\">\n                <p\n                  className={selectedFile === \"models.go\" ? activeClass : \"\"}\n                  onClick={() => handleSelectFile(\"models.go\")}\n                >\n                  models.go\n                </p>\n              </File>\n            </Folder>\n            <Folder value=\"routing\" element=\"routing\">\n              <Folder value=\"auth\" element=\"auth\">\n                <File value=\"auth.go\">\n                  <p\n                    className={selectedFile === \"auth.go\" ? activeClass : \"\"}\n                    onClick={() => handleSelectFile(\"auth.go\")}\n                  >\n                    auth.go\n                  </p>\n                </File>\n              </Folder>\n              <Folder value=\"emp\" element=\"emp\">\n                <File value=\"emp.go\">\n                  <p\n                    className={selectedFile === \"emp.go\" ? activeClass : \"\"}\n                    onClick={() => handleSelectFile(\"emp.go\")}\n                  >\n                    emp.go\n                  </p>\n                </File>\n              </Folder>\n            </Folder>\n            <Folder value=\"utils\" element=\"utils\">\n              <File value=\"bcrypt.go\">\n                <p\n                  className={selectedFile === \"bcrypt.go\" ? activeClass : \"\"}\n                  onClick={() => handleSelectFile(\"bcrypt.go\")}\n                >\n                  bcrypt.go\n                </p>\n              </File>\n              <File value=\"jwt.go\">\n                <p\n                  className={selectedFile === \"jwt.go\" ? activeClass : \"\"}\n                  onClick={() => handleSelectFile(\"jwt.go\")}\n                >\n                  jwt.go\n                </p>\n              </File>\n            </Folder>\n          </Folder>\n          <File value=\"main\">\n            <p\n              className={selectedFile === \"main.go\" ? activeClass : \"\"}\n              onClick={() => handleSelectFile(\"main.go\")}\n            >\n              main.go\n            </p>\n          </File>\n        </Tree>\n      </div>\n\n      <div className=\"w-4/5\">\n        <ScrollShadow className=\"max-h-[790px]\" size={5} hideScrollBar>\n          <CodeBlock code={syntaxcode} language=\"go\" />\n        </ScrollShadow>\n      </div>\n    </main>\n  );\n}\n\nexport default Display;\nconst ELEMENTS = [\n  {\n    id: \"src\",\n    isSelectable: true,\n    name: \"src\",\n    children: [\n      {\n        id: \"db\",\n        isSelectable: true,\n        name: \"db\",\n        children: [\n          {\n            id: \"db.go\",\n            isSelectable: true,\n            name: \"db.go\",\n          },\n        ],\n      },\n      {\n        id: \"middleware\",\n        isSelectable: true,\n        name: \"middleware\",\n        children: [\n          {\n            id: \"middleware.go\",\n            isSelectable: true,\n            name: \"middleware.go\",\n          },\n        ],\n      },\n      {\n        id: \"models\",\n        isSelectable: true,\n        name: \"models\",\n        children: [\n          {\n            id: \"models.go\",\n            isSelectable: true,\n            name: \"models.go\",\n          },\n        ],\n      },\n      {\n        id: \"routing\",\n        isSelectable: true,\n        name: \"routing\",\n        children: [\n          {\n            id: \"auth\",\n            isSelectable: true,\n            name: \"auth\",\n            children: [\n              {\n                id: \"auth.go\",\n                isSelectable: true,\n                name: \"auth.go\",\n              },\n            ],\n          },\n          {\n            id: \"emp\",\n            isSelectable: true,\n            name: \"emp\",\n            children: [\n              {\n                id: \"emp.go\",\n                isSelectable: true,\n                name: \"emp.go\",\n              },\n            ],\n          },\n        ],\n      },\n      {\n        id: \"utils\",\n        isSelectable: true,\n        name: \"utils\",\n        children: [\n          {\n            id: \"bcrypt.go\",\n            isSelectable: true,\n            name: \"bcrypt.go\",\n          },\n          {\n            id: \"jwt.go\",\n            isSelectable: true,\n            name: \"jwt.go\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: \"main\",\n    isSelectable: true,\n    name: \"main.go\",\n  },\n];\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}